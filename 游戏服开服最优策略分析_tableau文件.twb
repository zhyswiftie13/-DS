<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <RelationshipCalculations />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='createrole_login_record.csv+ (多个连接)' inline='true' name='federated.0wwwctr1urti431cndox8057nqzb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='createrole_login_record' name='textscan.19i3zye06w1tk3157yvix0vpb2ih'>
            <connection class='textscan' directory='C:/Users/zeng/OneDrive/Desktop' filename='createrole_login_record.csv' password='' server='' />
          </named-connection>
          <named-connection caption='user_daily_session_length_record' name='textscan.0f79k9p16soygj1ezsxb20qlswri'>
            <connection class='textscan' directory='C:/Users/zeng/OneDrive/Desktop' filename='user_daily_session_length_record.csv' password='' server='' />
          </named-connection>
          <named-connection caption='user_payment_record' name='textscan.0yp7vhf1t4xwnd115shnm0llblg9'>
            <connection class='textscan' directory='C:/Users/zeng/OneDrive/Desktop' filename='user_payment_record.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='textscan.19i3zye06w1tk3157yvix0vpb2ih' name='createrole_login_record.csv' table='[createrole_login_record#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='appid' ordinal='0' />
              <column datatype='date' name='dt' ordinal='1' />
              <column datatype='string' name='ctwid' ordinal='2' />
              <column datatype='integer' name='server_id' ordinal='3' />
              <column datatype='string' name='type' ordinal='4' />
              <column datatype='integer' name='time' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yp7vhf1t4xwnd115shnm0llblg9' name='createrole_login_record.csv1' table='[createrole_login_record#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='appid' ordinal='0' />
              <column datatype='date' name='dt' ordinal='1' />
              <column datatype='string' name='ctwid' ordinal='2' />
              <column datatype='integer' name='server_id' ordinal='3' />
              <column datatype='string' name='type' ordinal='4' />
              <column datatype='integer' name='time' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0yp7vhf1t4xwnd115shnm0llblg9' name='user_daily_session_length_record.csv' table='[user_daily_session_length_record#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='appid' ordinal='0' />
              <column datatype='date' name='dt' ordinal='1' />
              <column datatype='string' name='ctwid' ordinal='2' />
              <column datatype='integer' name='session_length' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0yp7vhf1t4xwnd115shnm0llblg9' name='user_payment_record.csv' table='[user_payment_record#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
              <column datatype='string' name='appid' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='string' name='ctwid' ordinal='2' />
              <column datatype='integer' name='server_id' ordinal='3' />
              <column datatype='integer' name='time' ordinal='4' />
              <column datatype='integer' name='pay_amt' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[appid (createrole_login_record.csv1)]' value='[createrole_login_record.csv1].[appid]' />
          <map key='[appid (user_daily_session_length_record.csv)]' value='[user_daily_session_length_record.csv].[appid]' />
          <map key='[appid (user_payment_record.csv)]' value='[user_payment_record.csv].[appid]' />
          <map key='[appid]' value='[createrole_login_record.csv].[appid]' />
          <map key='[ctwid (createrole_login_record.csv1)]' value='[createrole_login_record.csv1].[ctwid]' />
          <map key='[ctwid (user_daily_session_length_record.csv)]' value='[user_daily_session_length_record.csv].[ctwid]' />
          <map key='[ctwid (user_payment_record.csv)]' value='[user_payment_record.csv].[ctwid]' />
          <map key='[ctwid]' value='[createrole_login_record.csv].[ctwid]' />
          <map key='[date]' value='[user_payment_record.csv].[date]' />
          <map key='[dt (createrole_login_record.csv1)]' value='[createrole_login_record.csv1].[dt]' />
          <map key='[dt (user_daily_session_length_record.csv)]' value='[user_daily_session_length_record.csv].[dt]' />
          <map key='[dt]' value='[createrole_login_record.csv].[dt]' />
          <map key='[pay_amt]' value='[user_payment_record.csv].[pay_amt]' />
          <map key='[server_id (createrole_login_record.csv1)]' value='[createrole_login_record.csv1].[server_id]' />
          <map key='[server_id (user_payment_record.csv)]' value='[user_payment_record.csv].[server_id]' />
          <map key='[server_id]' value='[createrole_login_record.csv].[server_id]' />
          <map key='[session_length]' value='[user_daily_session_length_record.csv].[session_length]' />
          <map key='[time (createrole_login_record.csv1)]' value='[createrole_login_record.csv1].[time]' />
          <map key='[time (user_payment_record.csv)]' value='[user_payment_record.csv].[time]' />
          <map key='[time]' value='[createrole_login_record.csv].[time]' />
          <map key='[type (createrole_login_record.csv1)]' value='[createrole_login_record.csv1].[type]' />
          <map key='[type]' value='[createrole_login_record.csv].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[createrole_login_record.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>appid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[appid]</local-name>
            <parent-name>[createrole_login_record.csv]</parent-name>
            <remote-alias>appid</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[createrole_login_record.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctwid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ctwid]</local-name>
            <parent-name>[createrole_login_record.csv]</parent-name>
            <remote-alias>ctwid</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>server_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[server_id]</local-name>
            <parent-name>[createrole_login_record.csv]</parent-name>
            <remote-alias>server_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[createrole_login_record.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[createrole_login_record.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[createrole_login_record.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>appid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[appid (createrole_login_record.csv1)]</local-name>
            <parent-name>[createrole_login_record.csv1]</parent-name>
            <remote-alias>appid</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (createrole_login_record.csv1)]</local-name>
            <parent-name>[createrole_login_record.csv1]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctwid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ctwid (createrole_login_record.csv1)]</local-name>
            <parent-name>[createrole_login_record.csv1]</parent-name>
            <remote-alias>ctwid</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>server_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[server_id (createrole_login_record.csv1)]</local-name>
            <parent-name>[createrole_login_record.csv1]</parent-name>
            <remote-alias>server_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type (createrole_login_record.csv1)]</local-name>
            <parent-name>[createrole_login_record.csv1]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time (createrole_login_record.csv1)]</local-name>
            <parent-name>[createrole_login_record.csv1]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[user_daily_session_length_record.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>appid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[appid (user_daily_session_length_record.csv)]</local-name>
            <parent-name>[user_daily_session_length_record.csv]</parent-name>
            <remote-alias>appid</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>133</remote-type>
            <local-name>[dt (user_daily_session_length_record.csv)]</local-name>
            <parent-name>[user_daily_session_length_record.csv]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctwid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ctwid (user_daily_session_length_record.csv)]</local-name>
            <parent-name>[user_daily_session_length_record.csv]</parent-name>
            <remote-alias>ctwid</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>session_length</remote-name>
            <remote-type>20</remote-type>
            <local-name>[session_length]</local-name>
            <parent-name>[user_daily_session_length_record.csv]</parent-name>
            <remote-alias>session_length</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[user_payment_record.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¥&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_CN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>appid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[appid (user_payment_record.csv)]</local-name>
            <parent-name>[user_payment_record.csv]</parent-name>
            <remote-alias>appid</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[user_payment_record.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ctwid</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ctwid (user_payment_record.csv)]</local-name>
            <parent-name>[user_payment_record.csv]</parent-name>
            <remote-alias>ctwid</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>server_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[server_id (user_payment_record.csv)]</local-name>
            <parent-name>[user_payment_record.csv]</parent-name>
            <remote-alias>server_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time (user_payment_record.csv)]</local-name>
            <parent-name>[user_payment_record.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pay_amt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pay_amt]</local-name>
            <parent-name>[user_payment_record.csv]</parent-name>
            <remote-alias>pay_amt</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='createrole_login_record.csv' datatype='table' name='[__tableau_internal_object_id__].[createrole_login_record.csv_A044C274559145BDAA277728A90775C1]' role='measure' type='quantitative' />
      <column caption='createrole_login_record.csv1' datatype='table' name='[__tableau_internal_object_id__].[createrole_login_record.csv_E79403E8E31448E88EB1DE32FCE5AECE]' role='measure' type='quantitative' />
      <column caption='user_daily_session_length_record.csv' datatype='table' name='[__tableau_internal_object_id__].[user_daily_session_length_record.csv_2548E5A63D1F4EE1BFF1A365D9C1C2F4]' role='measure' type='quantitative' />
      <column caption='user_payment_record.csv' datatype='table' name='[__tableau_internal_object_id__].[user_payment_record.csv_12043BE69597442E8A06F73F672455BC]' role='measure' type='quantitative' />
      <column caption='Appid (Createrole Login Record.Csv1)' datatype='string' name='[appid (createrole_login_record.csv1)]' role='dimension' type='nominal' />
      <column caption='Appid (User Daily Session Length Record.Csv)' datatype='string' name='[appid (user_daily_session_length_record.csv)]' role='dimension' type='nominal' />
      <column caption='Appid (User Payment Record.Csv)' datatype='string' name='[appid (user_payment_record.csv)]' role='dimension' type='nominal' />
      <column caption='Appid' datatype='string' name='[appid]' role='dimension' type='nominal' />
      <column caption='Ctwid (Createrole Login Record.Csv1)' datatype='string' name='[ctwid (createrole_login_record.csv1)]' role='dimension' type='nominal' />
      <column caption='Ctwid (User Daily Session Length Record.Csv)' datatype='string' name='[ctwid (user_daily_session_length_record.csv)]' role='dimension' type='nominal' />
      <column caption='Ctwid (User Payment Record.Csv)' datatype='string' name='[ctwid (user_payment_record.csv)]' role='dimension' type='nominal' />
      <column caption='Ctwid' datatype='string' name='[ctwid]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dt (Createrole Login Record.Csv1)' datatype='date' name='[dt (createrole_login_record.csv1)]' role='dimension' type='ordinal' />
      <column caption='Dt (User Daily Session Length Record.Csv)' datatype='date' name='[dt (user_daily_session_length_record.csv)]' role='dimension' type='ordinal' />
      <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
      <column caption='Pay Amt' datatype='integer' name='[pay_amt]' role='measure' type='quantitative' />
      <column caption='Server Id (Createrole Login Record.Csv1)' datatype='integer' name='[server_id (createrole_login_record.csv1)]' role='dimension' type='ordinal' />
      <column caption='Server Id (User Payment Record.Csv)' datatype='integer' name='[server_id (user_payment_record.csv)]' role='dimension' type='ordinal' />
      <column caption='Server Id' datatype='integer' name='[server_id]' role='dimension' type='ordinal' />
      <column caption='Session Length' datatype='integer' name='[session_length]' role='measure' type='quantitative' />
      <column caption='Time (Createrole Login Record.Csv1)' datatype='integer' name='[time (createrole_login_record.csv1)]' role='measure' type='quantitative' />
      <column caption='Time (User Payment Record.Csv)' datatype='integer' name='[time (user_payment_record.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
      <column caption='Type (Createrole Login Record.Csv1)' datatype='string' name='[type (createrole_login_record.csv1)]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[server_id (createrole_login_record.csv1)]' derivation='None' name='[none:server_id (createrole_login_record.csv1):ok]' pivot='key' type='ordinal' />
      <column-instance column='[server_id (user_payment_record.csv)]' derivation='None' name='[none:server_id (user_payment_record.csv):ok]' pivot='key' type='ordinal' />
      <column-instance column='[server_id]' derivation='None' name='[none:server_id:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:server_id:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#499894'>
              <bucket>29</bucket>
            </map>
            <map to='#499894'>
              <bucket>49</bucket>
            </map>
            <map to='#499894'>
              <bucket>69</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>-30000</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>21</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>41</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>61</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>25</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>45</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>65</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13</bucket>
            </map>
            <map to='#79706e'>
              <bucket>33</bucket>
            </map>
            <map to='#79706e'>
              <bucket>53</bucket>
            </map>
            <map to='#79706e'>
              <bucket>73</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>30</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>50</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>70</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>26</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>46</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>66</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>19</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>59</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>22</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>42</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>62</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>37</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>57</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>77</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>27</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>47</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>67</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>14</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>34</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>54</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>74</bucket>
            </map>
            <map to='#d37295'>
              <bucket>15</bucket>
            </map>
            <map to='#d37295'>
              <bucket>35</bucket>
            </map>
            <map to='#d37295'>
              <bucket>55</bucket>
            </map>
            <map to='#d37295'>
              <bucket>75</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>18</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>38</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>58</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>78</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>20</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>40</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>60</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#e15759'>
              <bucket>31</bucket>
            </map>
            <map to='#e15759'>
              <bucket>51</bucket>
            </map>
            <map to='#e15759'>
              <bucket>71</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>28</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>48</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>68</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>43</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>63</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>16</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>36</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>56</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>76</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>32</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>52</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>72</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>24</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>44</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>64</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:server_id (createrole_login_record.csv1):ok]' type='palette'>
            <map to='#499894'>
              <bucket>7</bucket>
            </map>
            <map to='#499894'>
              <bucket>27</bucket>
            </map>
            <map to='#499894'>
              <bucket>47</bucket>
            </map>
            <map to='#499894'>
              <bucket>67</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>19</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>39</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>59</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>23</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>43</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>63</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11</bucket>
            </map>
            <map to='#79706e'>
              <bucket>31</bucket>
            </map>
            <map to='#79706e'>
              <bucket>51</bucket>
            </map>
            <map to='#79706e'>
              <bucket>71</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>28</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>48</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>68</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>24</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>44</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>64</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>17</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>37</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>57</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>0</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>20</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>40</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>60</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>15</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>35</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>55</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>25</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>45</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>65</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>12</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>32</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>52</bucket>
            </map>
            <map to='#d37295'>
              <bucket>13</bucket>
            </map>
            <map to='#d37295'>
              <bucket>33</bucket>
            </map>
            <map to='#d37295'>
              <bucket>53</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>16</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>36</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>56</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>18</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>38</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>58</bucket>
            </map>
            <map to='#e15759'>
              <bucket>9</bucket>
            </map>
            <map to='#e15759'>
              <bucket>29</bucket>
            </map>
            <map to='#e15759'>
              <bucket>49</bucket>
            </map>
            <map to='#e15759'>
              <bucket>69</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>26</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>46</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>66</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>21</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>41</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>61</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>14</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>34</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>54</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>30</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>50</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>70</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>22</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>42</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>62</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:server_id (user_payment_record.csv):ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#499894'>
              <bucket>29</bucket>
            </map>
            <map to='#499894'>
              <bucket>49</bucket>
            </map>
            <map to='#499894'>
              <bucket>69</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>21</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>41</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>61</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>25</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>45</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>65</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13</bucket>
            </map>
            <map to='#79706e'>
              <bucket>33</bucket>
            </map>
            <map to='#79706e'>
              <bucket>53</bucket>
            </map>
            <map to='#79706e'>
              <bucket>73</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>30</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>50</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>70</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>26</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>46</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>66</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>19</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>39</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>59</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>22</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>42</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>62</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>37</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>57</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>77</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>27</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>47</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>67</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>14</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>34</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>54</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>74</bucket>
            </map>
            <map to='#d37295'>
              <bucket>15</bucket>
            </map>
            <map to='#d37295'>
              <bucket>35</bucket>
            </map>
            <map to='#d37295'>
              <bucket>55</bucket>
            </map>
            <map to='#d37295'>
              <bucket>75</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>18</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>38</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>58</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>78</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>20</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>40</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>60</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#e15759'>
              <bucket>31</bucket>
            </map>
            <map to='#e15759'>
              <bucket>51</bucket>
            </map>
            <map to='#e15759'>
              <bucket>71</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>28</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>48</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>68</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>23</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>43</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>63</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>16</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>36</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>56</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>76</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>32</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>52</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>72</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>24</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>44</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>64</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;中国&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='createrole_login_record.csv' id='createrole_login_record.csv_A044C274559145BDAA277728A90775C1'>
            <properties context=''>
              <relation connection='textscan.19i3zye06w1tk3157yvix0vpb2ih' name='createrole_login_record.csv' table='[createrole_login_record#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='appid' ordinal='0' />
                  <column datatype='date' name='dt' ordinal='1' />
                  <column datatype='string' name='ctwid' ordinal='2' />
                  <column datatype='integer' name='server_id' ordinal='3' />
                  <column datatype='string' name='type' ordinal='4' />
                  <column datatype='integer' name='time' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='createrole_login_record.csv1' id='createrole_login_record.csv_E79403E8E31448E88EB1DE32FCE5AECE'>
            <properties context=''>
              <relation connection='textscan.0yp7vhf1t4xwnd115shnm0llblg9' name='createrole_login_record.csv1' table='[createrole_login_record#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='appid' ordinal='0' />
                  <column datatype='date' name='dt' ordinal='1' />
                  <column datatype='string' name='ctwid' ordinal='2' />
                  <column datatype='integer' name='server_id' ordinal='3' />
                  <column datatype='string' name='type' ordinal='4' />
                  <column datatype='integer' name='time' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='user_daily_session_length_record.csv' id='user_daily_session_length_record.csv_2548E5A63D1F4EE1BFF1A365D9C1C2F4'>
            <properties context=''>
              <relation connection='textscan.0yp7vhf1t4xwnd115shnm0llblg9' name='user_daily_session_length_record.csv' table='[user_daily_session_length_record#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='appid' ordinal='0' />
                  <column datatype='date' name='dt' ordinal='1' />
                  <column datatype='string' name='ctwid' ordinal='2' />
                  <column datatype='integer' name='session_length' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='user_payment_record.csv' id='user_payment_record.csv_12043BE69597442E8A06F73F672455BC'>
            <properties context=''>
              <relation connection='textscan.0yp7vhf1t4xwnd115shnm0llblg9' name='user_payment_record.csv' table='[user_payment_record#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='zh_CN' separator=','>
                  <column datatype='string' name='appid' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='string' name='ctwid' ordinal='2' />
                  <column datatype='integer' name='server_id' ordinal='3' />
                  <column datatype='integer' name='time' ordinal='4' />
                  <column datatype='integer' name='pay_amt' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[ctwid]' />
                <expression op='[ctwid (createrole_login_record.csv1)]' />
              </expression>
              <expression op='='>
                <expression op='[type]' />
                <expression op='[type (createrole_login_record.csv1)]' />
              </expression>
              <expression op='='>
                <expression op='[dt]' />
                <expression op='date(DATEADD(&apos;day&apos;,-1,[dt (createrole_login_record.csv1)]))' />
              </expression>
              <expression op='='>
                <expression op='[server_id]' />
                <expression op='[server_id (createrole_login_record.csv1)]' />
              </expression>
            </expression>
            <first-end-point object-id='createrole_login_record.csv_A044C274559145BDAA277728A90775C1' />
            <second-end-point object-id='createrole_login_record.csv_E79403E8E31448E88EB1DE32FCE5AECE' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[ctwid]' />
                <expression op='[ctwid (user_daily_session_length_record.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[dt]' />
                <expression op='[dt (user_daily_session_length_record.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='createrole_login_record.csv_A044C274559145BDAA277728A90775C1' />
            <second-end-point object-id='user_daily_session_length_record.csv_2548E5A63D1F4EE1BFF1A365D9C1C2F4' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[ctwid]' />
                <expression op='[ctwid (user_payment_record.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[dt]' />
                <expression op='[date]' />
              </expression>
              <expression op='='>
                <expression op='[server_id]' />
                <expression op='[server_id (user_payment_record.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='createrole_login_record.csv_A044C274559145BDAA277728A90775C1' />
            <second-end-point object-id='user_payment_record.csv_12043BE69597442E8A06F73F672455BC' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='ARPPU每付费玩家收入'>
      <table>
        <view>
          <datasources>
            <datasource caption='createrole_login_record.csv+ (多个连接)' name='federated.0wwwctr1urti431cndox8057nqzb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwwctr1urti431cndox8057nqzb'>
            <column caption='SUM([Pay Amt])/COUNTD([Ctwid (User Payment Record.Csv)])' datatype='real' name='[Calculation_2143431969447174164]' role='measure' type='quantitative' user:unnamed='ARPPU每付费玩家收入'>
              <calculation class='tableau' formula='SUM([pay_amt])/COUNTD([ctwid (user_payment_record.csv)])' />
            </column>
            <column caption='Ctwid (User Payment Record.Csv)' datatype='string' name='[ctwid (user_payment_record.csv)]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[server_id (user_payment_record.csv)]' derivation='None' name='[none:server_id (user_payment_record.csv):ok]' pivot='key' type='ordinal' />
            <column caption='Pay Amt' datatype='integer' name='[pay_amt]' role='measure' type='quantitative' />
            <column caption='Server Id (User Payment Record.Csv)' datatype='integer' name='[server_id (user_payment_record.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2143431969447174164]' derivation='User' name='[usr:Calculation_2143431969447174164:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (user_payment_record.csv):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='1' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='2' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='3' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='4' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='5' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='6' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='7' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='8' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='9' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='10' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='11' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='12' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='13' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='14' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='15' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='16' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='17' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='18' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='19' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='20' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='21' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='22' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='23' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='24' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='25' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='26' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='27' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='28' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='29' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='30' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='31' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='32' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='33' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='34' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='35' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='36' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='37' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='38' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='39' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='40' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='41' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='42' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='43' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='44' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='45' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='46' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='47' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='48' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='49' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='50' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='51' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='52' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='53' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='54' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='55' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='56' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='57' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='58' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='59' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='60' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='61' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='62' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='63' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='64' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='65' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='66' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='67' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='68' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='69' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='70' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='71' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='72' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='73' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='74' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='75' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='76' />
              <groupfilter function='member' level='[none:server_id (user_payment_record.csv):ok]' member='77' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (user_payment_record.csv):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wwwctr1urti431cndox8057nqzb].[usr:Calculation_2143431969447174164:qk]' field-type='quantitative' major-origin='200.0' major-spacing='100.0' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (user_payment_record.csv):ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wwwctr1urti431cndox8057nqzb].[usr:Calculation_2143431969447174164:qk]</rows>
        <cols>[federated.0wwwctr1urti431cndox8057nqzb].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{C3EDF07D-5057-49B6-8699-72ECAB15BE5A}' />
    </worksheet>
    <worksheet name='ARPU每用户平均收入'>
      <table>
        <view>
          <datasources>
            <datasource caption='createrole_login_record.csv+ (多个连接)' name='federated.0wwwctr1urti431cndox8057nqzb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwwctr1urti431cndox8057nqzb'>
            <column caption='SUM([Pay Amt])/COUNTD(ctwid)' datatype='real' name='[Calculation_2143431969446608913]' role='measure' type='quantitative' user:unnamed='ARPU每用户平均收入'>
              <calculation class='tableau' formula='SUM([pay_amt])/COUNTD(ctwid)' />
            </column>
            <column caption='Ctwid' datatype='string' name='[ctwid]' role='dimension' type='nominal' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[server_id]' derivation='None' name='[none:server_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Pay Amt' datatype='integer' name='[pay_amt]' role='measure' type='quantitative' />
            <column caption='Server Id' datatype='integer' name='[server_id]' role='dimension' type='ordinal' />
            <column-instance column='[dt]' derivation='Day-Trunc' name='[tdy:dt:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2143431969446608913]' derivation='User' name='[usr:Calculation_2143431969446608913:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:server_id:ok]' member='1' />
              <groupfilter function='member' level='[none:server_id:ok]' member='2' />
              <groupfilter function='member' level='[none:server_id:ok]' member='3' />
              <groupfilter function='member' level='[none:server_id:ok]' member='4' />
              <groupfilter function='member' level='[none:server_id:ok]' member='5' />
              <groupfilter function='member' level='[none:server_id:ok]' member='6' />
              <groupfilter function='member' level='[none:server_id:ok]' member='7' />
              <groupfilter function='member' level='[none:server_id:ok]' member='8' />
              <groupfilter function='member' level='[none:server_id:ok]' member='9' />
              <groupfilter function='member' level='[none:server_id:ok]' member='10' />
              <groupfilter function='member' level='[none:server_id:ok]' member='11' />
              <groupfilter function='member' level='[none:server_id:ok]' member='12' />
              <groupfilter function='member' level='[none:server_id:ok]' member='13' />
              <groupfilter function='member' level='[none:server_id:ok]' member='14' />
              <groupfilter function='member' level='[none:server_id:ok]' member='15' />
              <groupfilter function='member' level='[none:server_id:ok]' member='16' />
              <groupfilter function='member' level='[none:server_id:ok]' member='17' />
              <groupfilter function='member' level='[none:server_id:ok]' member='18' />
              <groupfilter function='member' level='[none:server_id:ok]' member='19' />
              <groupfilter function='member' level='[none:server_id:ok]' member='20' />
              <groupfilter function='member' level='[none:server_id:ok]' member='21' />
              <groupfilter function='member' level='[none:server_id:ok]' member='22' />
              <groupfilter function='member' level='[none:server_id:ok]' member='23' />
              <groupfilter function='member' level='[none:server_id:ok]' member='24' />
              <groupfilter function='member' level='[none:server_id:ok]' member='25' />
              <groupfilter function='member' level='[none:server_id:ok]' member='26' />
              <groupfilter function='member' level='[none:server_id:ok]' member='27' />
              <groupfilter function='member' level='[none:server_id:ok]' member='28' />
              <groupfilter function='member' level='[none:server_id:ok]' member='29' />
              <groupfilter function='member' level='[none:server_id:ok]' member='30' />
              <groupfilter function='member' level='[none:server_id:ok]' member='31' />
              <groupfilter function='member' level='[none:server_id:ok]' member='32' />
              <groupfilter function='member' level='[none:server_id:ok]' member='33' />
              <groupfilter function='member' level='[none:server_id:ok]' member='34' />
              <groupfilter function='member' level='[none:server_id:ok]' member='35' />
              <groupfilter function='member' level='[none:server_id:ok]' member='36' />
              <groupfilter function='member' level='[none:server_id:ok]' member='37' />
              <groupfilter function='member' level='[none:server_id:ok]' member='38' />
              <groupfilter function='member' level='[none:server_id:ok]' member='39' />
              <groupfilter function='member' level='[none:server_id:ok]' member='40' />
              <groupfilter function='member' level='[none:server_id:ok]' member='41' />
              <groupfilter function='member' level='[none:server_id:ok]' member='42' />
              <groupfilter function='member' level='[none:server_id:ok]' member='43' />
              <groupfilter function='member' level='[none:server_id:ok]' member='44' />
              <groupfilter function='member' level='[none:server_id:ok]' member='45' />
              <groupfilter function='member' level='[none:server_id:ok]' member='46' />
              <groupfilter function='member' level='[none:server_id:ok]' member='47' />
              <groupfilter function='member' level='[none:server_id:ok]' member='48' />
              <groupfilter function='member' level='[none:server_id:ok]' member='49' />
              <groupfilter function='member' level='[none:server_id:ok]' member='50' />
              <groupfilter function='member' level='[none:server_id:ok]' member='51' />
              <groupfilter function='member' level='[none:server_id:ok]' member='52' />
              <groupfilter function='member' level='[none:server_id:ok]' member='53' />
              <groupfilter function='member' level='[none:server_id:ok]' member='54' />
              <groupfilter function='member' level='[none:server_id:ok]' member='55' />
              <groupfilter function='member' level='[none:server_id:ok]' member='56' />
              <groupfilter function='member' level='[none:server_id:ok]' member='57' />
              <groupfilter function='member' level='[none:server_id:ok]' member='58' />
              <groupfilter function='member' level='[none:server_id:ok]' member='59' />
              <groupfilter function='member' level='[none:server_id:ok]' member='60' />
              <groupfilter function='member' level='[none:server_id:ok]' member='61' />
              <groupfilter function='member' level='[none:server_id:ok]' member='62' />
              <groupfilter function='member' level='[none:server_id:ok]' member='63' />
              <groupfilter function='member' level='[none:server_id:ok]' member='64' />
              <groupfilter function='member' level='[none:server_id:ok]' member='65' />
              <groupfilter function='member' level='[none:server_id:ok]' member='66' />
              <groupfilter function='member' level='[none:server_id:ok]' member='67' />
              <groupfilter function='member' level='[none:server_id:ok]' member='68' />
              <groupfilter function='member' level='[none:server_id:ok]' member='69' />
              <groupfilter function='member' level='[none:server_id:ok]' member='70' />
              <groupfilter function='member' level='[none:server_id:ok]' member='71' />
              <groupfilter function='member' level='[none:server_id:ok]' member='72' />
              <groupfilter function='member' level='[none:server_id:ok]' member='73' />
              <groupfilter function='member' level='[none:server_id:ok]' member='74' />
              <groupfilter function='member' level='[none:server_id:ok]' member='75' />
              <groupfilter function='member' level='[none:server_id:ok]' member='76' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;g_login&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</column>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wwwctr1urti431cndox8057nqzb].[usr:Calculation_2143431969446608913:qk]' field-type='quantitative' major-origin='20.0' major-spacing='100.0' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wwwctr1urti431cndox8057nqzb].[usr:Calculation_2143431969446608913:qk]</rows>
        <cols>[federated.0wwwctr1urti431cndox8057nqzb].[tdy:dt:qk]</cols>
      </table>
      <simple-id uuid='{701F33C4-651D-48F3-BDA2-3279999D07D0}' />
    </worksheet>
    <worksheet name='DAU'>
      <table>
        <view>
          <datasources>
            <datasource caption='createrole_login_record.csv+ (多个连接)' name='federated.0wwwctr1urti431cndox8057nqzb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwwctr1urti431cndox8057nqzb'>
            <column-instance column='[ctwid]' derivation='CountD' name='[ctd:ctwid:qk]' pivot='key' type='quantitative' />
            <column caption='Ctwid' datatype='string' name='[ctwid]' role='dimension' type='nominal' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[server_id]' derivation='None' name='[none:server_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Server Id' datatype='integer' name='[server_id]' role='dimension' type='ordinal' />
            <column-instance column='[dt]' derivation='Day-Trunc' name='[tdy:dt:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:server_id:ok]' member='1' />
              <groupfilter function='member' level='[none:server_id:ok]' member='2' />
              <groupfilter function='member' level='[none:server_id:ok]' member='3' />
              <groupfilter function='member' level='[none:server_id:ok]' member='4' />
              <groupfilter function='member' level='[none:server_id:ok]' member='5' />
              <groupfilter function='member' level='[none:server_id:ok]' member='6' />
              <groupfilter function='member' level='[none:server_id:ok]' member='7' />
              <groupfilter function='member' level='[none:server_id:ok]' member='8' />
              <groupfilter function='member' level='[none:server_id:ok]' member='9' />
              <groupfilter function='member' level='[none:server_id:ok]' member='10' />
              <groupfilter function='member' level='[none:server_id:ok]' member='11' />
              <groupfilter function='member' level='[none:server_id:ok]' member='12' />
              <groupfilter function='member' level='[none:server_id:ok]' member='13' />
              <groupfilter function='member' level='[none:server_id:ok]' member='14' />
              <groupfilter function='member' level='[none:server_id:ok]' member='15' />
              <groupfilter function='member' level='[none:server_id:ok]' member='16' />
              <groupfilter function='member' level='[none:server_id:ok]' member='17' />
              <groupfilter function='member' level='[none:server_id:ok]' member='18' />
              <groupfilter function='member' level='[none:server_id:ok]' member='19' />
              <groupfilter function='member' level='[none:server_id:ok]' member='20' />
              <groupfilter function='member' level='[none:server_id:ok]' member='21' />
              <groupfilter function='member' level='[none:server_id:ok]' member='22' />
              <groupfilter function='member' level='[none:server_id:ok]' member='23' />
              <groupfilter function='member' level='[none:server_id:ok]' member='24' />
              <groupfilter function='member' level='[none:server_id:ok]' member='25' />
              <groupfilter function='member' level='[none:server_id:ok]' member='26' />
              <groupfilter function='member' level='[none:server_id:ok]' member='27' />
              <groupfilter function='member' level='[none:server_id:ok]' member='28' />
              <groupfilter function='member' level='[none:server_id:ok]' member='29' />
              <groupfilter function='member' level='[none:server_id:ok]' member='30' />
              <groupfilter function='member' level='[none:server_id:ok]' member='31' />
              <groupfilter function='member' level='[none:server_id:ok]' member='32' />
              <groupfilter function='member' level='[none:server_id:ok]' member='33' />
              <groupfilter function='member' level='[none:server_id:ok]' member='34' />
              <groupfilter function='member' level='[none:server_id:ok]' member='35' />
              <groupfilter function='member' level='[none:server_id:ok]' member='36' />
              <groupfilter function='member' level='[none:server_id:ok]' member='37' />
              <groupfilter function='member' level='[none:server_id:ok]' member='38' />
              <groupfilter function='member' level='[none:server_id:ok]' member='39' />
              <groupfilter function='member' level='[none:server_id:ok]' member='40' />
              <groupfilter function='member' level='[none:server_id:ok]' member='41' />
              <groupfilter function='member' level='[none:server_id:ok]' member='42' />
              <groupfilter function='member' level='[none:server_id:ok]' member='43' />
              <groupfilter function='member' level='[none:server_id:ok]' member='44' />
              <groupfilter function='member' level='[none:server_id:ok]' member='45' />
              <groupfilter function='member' level='[none:server_id:ok]' member='46' />
              <groupfilter function='member' level='[none:server_id:ok]' member='47' />
              <groupfilter function='member' level='[none:server_id:ok]' member='48' />
              <groupfilter function='member' level='[none:server_id:ok]' member='49' />
              <groupfilter function='member' level='[none:server_id:ok]' member='50' />
              <groupfilter function='member' level='[none:server_id:ok]' member='51' />
              <groupfilter function='member' level='[none:server_id:ok]' member='52' />
              <groupfilter function='member' level='[none:server_id:ok]' member='53' />
              <groupfilter function='member' level='[none:server_id:ok]' member='54' />
              <groupfilter function='member' level='[none:server_id:ok]' member='55' />
              <groupfilter function='member' level='[none:server_id:ok]' member='56' />
              <groupfilter function='member' level='[none:server_id:ok]' member='57' />
              <groupfilter function='member' level='[none:server_id:ok]' member='58' />
              <groupfilter function='member' level='[none:server_id:ok]' member='59' />
              <groupfilter function='member' level='[none:server_id:ok]' member='60' />
              <groupfilter function='member' level='[none:server_id:ok]' member='61' />
              <groupfilter function='member' level='[none:server_id:ok]' member='62' />
              <groupfilter function='member' level='[none:server_id:ok]' member='63' />
              <groupfilter function='member' level='[none:server_id:ok]' member='64' />
              <groupfilter function='member' level='[none:server_id:ok]' member='65' />
              <groupfilter function='member' level='[none:server_id:ok]' member='66' />
              <groupfilter function='member' level='[none:server_id:ok]' member='67' />
              <groupfilter function='member' level='[none:server_id:ok]' member='68' />
              <groupfilter function='member' level='[none:server_id:ok]' member='69' />
              <groupfilter function='member' level='[none:server_id:ok]' member='70' />
              <groupfilter function='member' level='[none:server_id:ok]' member='71' />
              <groupfilter function='member' level='[none:server_id:ok]' member='72' />
              <groupfilter function='member' level='[none:server_id:ok]' member='73' />
              <groupfilter function='member' level='[none:server_id:ok]' member='74' />
              <groupfilter function='member' level='[none:server_id:ok]' member='75' />
              <groupfilter function='member' level='[none:server_id:ok]' member='76' />
              <groupfilter function='member' level='[none:server_id:ok]' member='77' />
              <groupfilter function='member' level='[none:server_id:ok]' member='78' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]'>
            <groupfilter function='level-members' level='[none:type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</column>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7911050319671631' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wwwctr1urti431cndox8057nqzb].[ctd:ctwid:qk]</rows>
        <cols>([federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk] * [federated.0wwwctr1urti431cndox8057nqzb].[tdy:dt:qk])</cols>
      </table>
      <simple-id uuid='{1C66B28B-0551-4FC6-8FBC-22565EFD4D41}' />
    </worksheet>
    <worksheet name='MAU'>
      <table>
        <view>
          <datasources>
            <datasource caption='createrole_login_record.csv+ (多个连接)' name='federated.0wwwctr1urti431cndox8057nqzb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwwctr1urti431cndox8057nqzb'>
            <column-instance column='[ctwid]' derivation='CountD' name='[ctd:ctwid:qk]' pivot='key' type='quantitative' />
            <column caption='Ctwid' datatype='string' name='[ctwid]' role='dimension' type='nominal' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[server_id]' derivation='None' name='[none:server_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Server Id' datatype='integer' name='[server_id]' role='dimension' type='ordinal' />
            <column-instance column='[dt]' derivation='Month-Trunc' name='[tmn:dt:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:server_id:ok]' member='1' />
              <groupfilter function='member' level='[none:server_id:ok]' member='2' />
              <groupfilter function='member' level='[none:server_id:ok]' member='3' />
              <groupfilter function='member' level='[none:server_id:ok]' member='4' />
              <groupfilter function='member' level='[none:server_id:ok]' member='5' />
              <groupfilter function='member' level='[none:server_id:ok]' member='6' />
              <groupfilter function='member' level='[none:server_id:ok]' member='7' />
              <groupfilter function='member' level='[none:server_id:ok]' member='8' />
              <groupfilter function='member' level='[none:server_id:ok]' member='9' />
              <groupfilter function='member' level='[none:server_id:ok]' member='10' />
              <groupfilter function='member' level='[none:server_id:ok]' member='11' />
              <groupfilter function='member' level='[none:server_id:ok]' member='12' />
              <groupfilter function='member' level='[none:server_id:ok]' member='13' />
              <groupfilter function='member' level='[none:server_id:ok]' member='14' />
              <groupfilter function='member' level='[none:server_id:ok]' member='15' />
              <groupfilter function='member' level='[none:server_id:ok]' member='16' />
              <groupfilter function='member' level='[none:server_id:ok]' member='17' />
              <groupfilter function='member' level='[none:server_id:ok]' member='18' />
              <groupfilter function='member' level='[none:server_id:ok]' member='19' />
              <groupfilter function='member' level='[none:server_id:ok]' member='20' />
              <groupfilter function='member' level='[none:server_id:ok]' member='21' />
              <groupfilter function='member' level='[none:server_id:ok]' member='22' />
              <groupfilter function='member' level='[none:server_id:ok]' member='23' />
              <groupfilter function='member' level='[none:server_id:ok]' member='24' />
              <groupfilter function='member' level='[none:server_id:ok]' member='25' />
              <groupfilter function='member' level='[none:server_id:ok]' member='26' />
              <groupfilter function='member' level='[none:server_id:ok]' member='27' />
              <groupfilter function='member' level='[none:server_id:ok]' member='28' />
              <groupfilter function='member' level='[none:server_id:ok]' member='29' />
              <groupfilter function='member' level='[none:server_id:ok]' member='30' />
              <groupfilter function='member' level='[none:server_id:ok]' member='31' />
              <groupfilter function='member' level='[none:server_id:ok]' member='32' />
              <groupfilter function='member' level='[none:server_id:ok]' member='33' />
              <groupfilter function='member' level='[none:server_id:ok]' member='34' />
              <groupfilter function='member' level='[none:server_id:ok]' member='35' />
              <groupfilter function='member' level='[none:server_id:ok]' member='36' />
              <groupfilter function='member' level='[none:server_id:ok]' member='37' />
              <groupfilter function='member' level='[none:server_id:ok]' member='38' />
              <groupfilter function='member' level='[none:server_id:ok]' member='39' />
              <groupfilter function='member' level='[none:server_id:ok]' member='40' />
              <groupfilter function='member' level='[none:server_id:ok]' member='41' />
              <groupfilter function='member' level='[none:server_id:ok]' member='42' />
              <groupfilter function='member' level='[none:server_id:ok]' member='43' />
              <groupfilter function='member' level='[none:server_id:ok]' member='44' />
              <groupfilter function='member' level='[none:server_id:ok]' member='45' />
              <groupfilter function='member' level='[none:server_id:ok]' member='46' />
              <groupfilter function='member' level='[none:server_id:ok]' member='47' />
              <groupfilter function='member' level='[none:server_id:ok]' member='48' />
              <groupfilter function='member' level='[none:server_id:ok]' member='49' />
              <groupfilter function='member' level='[none:server_id:ok]' member='50' />
              <groupfilter function='member' level='[none:server_id:ok]' member='51' />
              <groupfilter function='member' level='[none:server_id:ok]' member='52' />
              <groupfilter function='member' level='[none:server_id:ok]' member='53' />
              <groupfilter function='member' level='[none:server_id:ok]' member='54' />
              <groupfilter function='member' level='[none:server_id:ok]' member='55' />
              <groupfilter function='member' level='[none:server_id:ok]' member='56' />
              <groupfilter function='member' level='[none:server_id:ok]' member='57' />
              <groupfilter function='member' level='[none:server_id:ok]' member='58' />
              <groupfilter function='member' level='[none:server_id:ok]' member='59' />
              <groupfilter function='member' level='[none:server_id:ok]' member='60' />
              <groupfilter function='member' level='[none:server_id:ok]' member='61' />
              <groupfilter function='member' level='[none:server_id:ok]' member='62' />
              <groupfilter function='member' level='[none:server_id:ok]' member='63' />
              <groupfilter function='member' level='[none:server_id:ok]' member='64' />
              <groupfilter function='member' level='[none:server_id:ok]' member='65' />
              <groupfilter function='member' level='[none:server_id:ok]' member='66' />
              <groupfilter function='member' level='[none:server_id:ok]' member='67' />
              <groupfilter function='member' level='[none:server_id:ok]' member='68' />
              <groupfilter function='member' level='[none:server_id:ok]' member='69' />
              <groupfilter function='member' level='[none:server_id:ok]' member='70' />
              <groupfilter function='member' level='[none:server_id:ok]' member='71' />
              <groupfilter function='member' level='[none:server_id:ok]' member='72' />
              <groupfilter function='member' level='[none:server_id:ok]' member='73' />
              <groupfilter function='member' level='[none:server_id:ok]' member='74' />
              <groupfilter function='member' level='[none:server_id:ok]' member='75' />
              <groupfilter function='member' level='[none:server_id:ok]' member='76' />
              <groupfilter function='member' level='[none:server_id:ok]' member='77' />
              <groupfilter function='member' level='[none:server_id:ok]' member='78' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wwwctr1urti431cndox8057nqzb].[ctd:ctwid:qk]</rows>
        <cols>([federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk] * [federated.0wwwctr1urti431cndox8057nqzb].[tmn:dt:qk])</cols>
      </table>
      <simple-id uuid='{4BE25D6E-558C-4CE2-8467-A92D185370F8}' />
    </worksheet>
    <worksheet name='PUR用户付费率'>
      <table>
        <view>
          <datasources>
            <datasource caption='createrole_login_record.csv+ (多个连接)' name='federated.0wwwctr1urti431cndox8057nqzb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwwctr1urti431cndox8057nqzb'>
            <column caption='COUNTD([Ctwid (User Payment Record.Csv)])/COUNTD([Ctwid])' datatype='real' name='[Calculation_2143431969442643984]' role='measure' type='quantitative' user:unnamed='工作表 6'>
              <calculation class='tableau' formula='COUNTD([ctwid (user_payment_record.csv)])/COUNTD([ctwid])' />
            </column>
            <column-instance column='[ctwid (user_payment_record.csv)]' derivation='CountD' name='[ctd:ctwid (user_payment_record.csv):qk]' pivot='key' type='quantitative' />
            <column caption='Ctwid (User Payment Record.Csv)' datatype='string' name='[ctwid (user_payment_record.csv)]' role='dimension' type='nominal' />
            <column caption='Ctwid' datatype='string' name='[ctwid]' role='dimension' type='nominal' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[server_id]' derivation='None' name='[none:server_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Server Id' datatype='integer' name='[server_id]' role='dimension' type='ordinal' />
            <column-instance column='[dt]' derivation='Day-Trunc' name='[tdy:dt:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2143431969442643984]' derivation='User' name='[usr:Calculation_2143431969442643984:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:server_id:ok]' member='1' />
              <groupfilter function='member' level='[none:server_id:ok]' member='2' />
              <groupfilter function='member' level='[none:server_id:ok]' member='3' />
              <groupfilter function='member' level='[none:server_id:ok]' member='4' />
              <groupfilter function='member' level='[none:server_id:ok]' member='5' />
              <groupfilter function='member' level='[none:server_id:ok]' member='6' />
              <groupfilter function='member' level='[none:server_id:ok]' member='7' />
              <groupfilter function='member' level='[none:server_id:ok]' member='8' />
              <groupfilter function='member' level='[none:server_id:ok]' member='9' />
              <groupfilter function='member' level='[none:server_id:ok]' member='10' />
              <groupfilter function='member' level='[none:server_id:ok]' member='11' />
              <groupfilter function='member' level='[none:server_id:ok]' member='12' />
              <groupfilter function='member' level='[none:server_id:ok]' member='13' />
              <groupfilter function='member' level='[none:server_id:ok]' member='14' />
              <groupfilter function='member' level='[none:server_id:ok]' member='15' />
              <groupfilter function='member' level='[none:server_id:ok]' member='16' />
              <groupfilter function='member' level='[none:server_id:ok]' member='17' />
              <groupfilter function='member' level='[none:server_id:ok]' member='18' />
              <groupfilter function='member' level='[none:server_id:ok]' member='19' />
              <groupfilter function='member' level='[none:server_id:ok]' member='20' />
              <groupfilter function='member' level='[none:server_id:ok]' member='21' />
              <groupfilter function='member' level='[none:server_id:ok]' member='22' />
              <groupfilter function='member' level='[none:server_id:ok]' member='23' />
              <groupfilter function='member' level='[none:server_id:ok]' member='24' />
              <groupfilter function='member' level='[none:server_id:ok]' member='25' />
              <groupfilter function='member' level='[none:server_id:ok]' member='26' />
              <groupfilter function='member' level='[none:server_id:ok]' member='27' />
              <groupfilter function='member' level='[none:server_id:ok]' member='28' />
              <groupfilter function='member' level='[none:server_id:ok]' member='29' />
              <groupfilter function='member' level='[none:server_id:ok]' member='30' />
              <groupfilter function='member' level='[none:server_id:ok]' member='31' />
              <groupfilter function='member' level='[none:server_id:ok]' member='32' />
              <groupfilter function='member' level='[none:server_id:ok]' member='33' />
              <groupfilter function='member' level='[none:server_id:ok]' member='34' />
              <groupfilter function='member' level='[none:server_id:ok]' member='35' />
              <groupfilter function='member' level='[none:server_id:ok]' member='36' />
              <groupfilter function='member' level='[none:server_id:ok]' member='37' />
              <groupfilter function='member' level='[none:server_id:ok]' member='38' />
              <groupfilter function='member' level='[none:server_id:ok]' member='39' />
              <groupfilter function='member' level='[none:server_id:ok]' member='40' />
              <groupfilter function='member' level='[none:server_id:ok]' member='41' />
              <groupfilter function='member' level='[none:server_id:ok]' member='42' />
              <groupfilter function='member' level='[none:server_id:ok]' member='43' />
              <groupfilter function='member' level='[none:server_id:ok]' member='44' />
              <groupfilter function='member' level='[none:server_id:ok]' member='45' />
              <groupfilter function='member' level='[none:server_id:ok]' member='46' />
              <groupfilter function='member' level='[none:server_id:ok]' member='47' />
              <groupfilter function='member' level='[none:server_id:ok]' member='48' />
              <groupfilter function='member' level='[none:server_id:ok]' member='49' />
              <groupfilter function='member' level='[none:server_id:ok]' member='50' />
              <groupfilter function='member' level='[none:server_id:ok]' member='51' />
              <groupfilter function='member' level='[none:server_id:ok]' member='52' />
              <groupfilter function='member' level='[none:server_id:ok]' member='53' />
              <groupfilter function='member' level='[none:server_id:ok]' member='54' />
              <groupfilter function='member' level='[none:server_id:ok]' member='55' />
              <groupfilter function='member' level='[none:server_id:ok]' member='56' />
              <groupfilter function='member' level='[none:server_id:ok]' member='57' />
              <groupfilter function='member' level='[none:server_id:ok]' member='58' />
              <groupfilter function='member' level='[none:server_id:ok]' member='59' />
              <groupfilter function='member' level='[none:server_id:ok]' member='60' />
              <groupfilter function='member' level='[none:server_id:ok]' member='61' />
              <groupfilter function='member' level='[none:server_id:ok]' member='62' />
              <groupfilter function='member' level='[none:server_id:ok]' member='63' />
              <groupfilter function='member' level='[none:server_id:ok]' member='64' />
              <groupfilter function='member' level='[none:server_id:ok]' member='65' />
              <groupfilter function='member' level='[none:server_id:ok]' member='66' />
              <groupfilter function='member' level='[none:server_id:ok]' member='67' />
              <groupfilter function='member' level='[none:server_id:ok]' member='68' />
              <groupfilter function='member' level='[none:server_id:ok]' member='69' />
              <groupfilter function='member' level='[none:server_id:ok]' member='70' />
              <groupfilter function='member' level='[none:server_id:ok]' member='71' />
              <groupfilter function='member' level='[none:server_id:ok]' member='72' />
              <groupfilter function='member' level='[none:server_id:ok]' member='73' />
              <groupfilter function='member' level='[none:server_id:ok]' member='74' />
              <groupfilter function='member' level='[none:server_id:ok]' member='75' />
              <groupfilter function='member' level='[none:server_id:ok]' member='76' />
              <groupfilter function='member' level='[none:server_id:ok]' member='77' />
              <groupfilter function='member' level='[none:server_id:ok]' member='78' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;g_login&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</column>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wwwctr1urti431cndox8057nqzb].[ctd:ctwid (user_payment_record.csv):qk]' field-type='quantitative' minor-origin='0' minor-spacing='10.0' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' />
              <lod column='[federated.0wwwctr1urti431cndox8057nqzb].[usr:Calculation_2143431969442643984:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wwwctr1urti431cndox8057nqzb].[ctd:ctwid (user_payment_record.csv):qk]</rows>
        <cols>[federated.0wwwctr1urti431cndox8057nqzb].[tdy:dt:qk]</cols>
      </table>
      <simple-id uuid='{2254B093-2573-41AE-9524-05CDA69AABDE}' />
    </worksheet>
    <worksheet name='工作表 9'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FEFB24DA-9701-4BA1-B4FD-D16ABFFDF418}' />
    </worksheet>
    <worksheet name='并发事件量'>
      <table>
        <view>
          <datasources>
            <datasource caption='createrole_login_record.csv+ (多个连接)' name='federated.0wwwctr1urti431cndox8057nqzb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwwctr1urti431cndox8057nqzb'>
            <column-instance column='[ctwid (user_payment_record.csv)]' derivation='Count' name='[cnt:ctwid (user_payment_record.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[ctwid]' derivation='Count' name='[cnt:ctwid:qk]' pivot='key' type='quantitative' />
            <column caption='Ctwid (User Payment Record.Csv)' datatype='string' name='[ctwid (user_payment_record.csv)]' role='dimension' type='nominal' />
            <column caption='Ctwid' datatype='string' name='[ctwid]' role='dimension' type='nominal' />
            <column-instance column='[server_id]' derivation='None' name='[none:server_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='None' name='[none:time:qk]' pivot='key' type='quantitative' />
            <column caption='Server Id' datatype='integer' name='[server_id]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:server_id:ok]' member='1' />
              <groupfilter function='member' level='[none:server_id:ok]' member='2' />
              <groupfilter function='member' level='[none:server_id:ok]' member='3' />
              <groupfilter function='member' level='[none:server_id:ok]' member='4' />
              <groupfilter function='member' level='[none:server_id:ok]' member='5' />
              <groupfilter function='member' level='[none:server_id:ok]' member='6' />
              <groupfilter function='member' level='[none:server_id:ok]' member='7' />
              <groupfilter function='member' level='[none:server_id:ok]' member='8' />
              <groupfilter function='member' level='[none:server_id:ok]' member='9' />
              <groupfilter function='member' level='[none:server_id:ok]' member='10' />
              <groupfilter function='member' level='[none:server_id:ok]' member='11' />
              <groupfilter function='member' level='[none:server_id:ok]' member='12' />
              <groupfilter function='member' level='[none:server_id:ok]' member='13' />
              <groupfilter function='member' level='[none:server_id:ok]' member='14' />
              <groupfilter function='member' level='[none:server_id:ok]' member='15' />
              <groupfilter function='member' level='[none:server_id:ok]' member='16' />
              <groupfilter function='member' level='[none:server_id:ok]' member='17' />
              <groupfilter function='member' level='[none:server_id:ok]' member='18' />
              <groupfilter function='member' level='[none:server_id:ok]' member='19' />
              <groupfilter function='member' level='[none:server_id:ok]' member='20' />
              <groupfilter function='member' level='[none:server_id:ok]' member='21' />
              <groupfilter function='member' level='[none:server_id:ok]' member='22' />
              <groupfilter function='member' level='[none:server_id:ok]' member='23' />
              <groupfilter function='member' level='[none:server_id:ok]' member='24' />
              <groupfilter function='member' level='[none:server_id:ok]' member='25' />
              <groupfilter function='member' level='[none:server_id:ok]' member='26' />
              <groupfilter function='member' level='[none:server_id:ok]' member='27' />
              <groupfilter function='member' level='[none:server_id:ok]' member='28' />
              <groupfilter function='member' level='[none:server_id:ok]' member='29' />
              <groupfilter function='member' level='[none:server_id:ok]' member='30' />
              <groupfilter function='member' level='[none:server_id:ok]' member='31' />
              <groupfilter function='member' level='[none:server_id:ok]' member='32' />
              <groupfilter function='member' level='[none:server_id:ok]' member='33' />
              <groupfilter function='member' level='[none:server_id:ok]' member='34' />
              <groupfilter function='member' level='[none:server_id:ok]' member='35' />
              <groupfilter function='member' level='[none:server_id:ok]' member='36' />
              <groupfilter function='member' level='[none:server_id:ok]' member='37' />
              <groupfilter function='member' level='[none:server_id:ok]' member='38' />
              <groupfilter function='member' level='[none:server_id:ok]' member='39' />
              <groupfilter function='member' level='[none:server_id:ok]' member='40' />
              <groupfilter function='member' level='[none:server_id:ok]' member='41' />
              <groupfilter function='member' level='[none:server_id:ok]' member='42' />
              <groupfilter function='member' level='[none:server_id:ok]' member='43' />
              <groupfilter function='member' level='[none:server_id:ok]' member='44' />
              <groupfilter function='member' level='[none:server_id:ok]' member='45' />
              <groupfilter function='member' level='[none:server_id:ok]' member='46' />
              <groupfilter function='member' level='[none:server_id:ok]' member='47' />
              <groupfilter function='member' level='[none:server_id:ok]' member='48' />
              <groupfilter function='member' level='[none:server_id:ok]' member='49' />
              <groupfilter function='member' level='[none:server_id:ok]' member='50' />
              <groupfilter function='member' level='[none:server_id:ok]' member='51' />
              <groupfilter function='member' level='[none:server_id:ok]' member='52' />
              <groupfilter function='member' level='[none:server_id:ok]' member='53' />
              <groupfilter function='member' level='[none:server_id:ok]' member='54' />
              <groupfilter function='member' level='[none:server_id:ok]' member='55' />
              <groupfilter function='member' level='[none:server_id:ok]' member='56' />
              <groupfilter function='member' level='[none:server_id:ok]' member='57' />
              <groupfilter function='member' level='[none:server_id:ok]' member='58' />
              <groupfilter function='member' level='[none:server_id:ok]' member='59' />
              <groupfilter function='member' level='[none:server_id:ok]' member='60' />
              <groupfilter function='member' level='[none:server_id:ok]' member='61' />
              <groupfilter function='member' level='[none:server_id:ok]' member='62' />
              <groupfilter function='member' level='[none:server_id:ok]' member='63' />
              <groupfilter function='member' level='[none:server_id:ok]' member='64' />
              <groupfilter function='member' level='[none:server_id:ok]' member='65' />
              <groupfilter function='member' level='[none:server_id:ok]' member='66' />
              <groupfilter function='member' level='[none:server_id:ok]' member='67' />
              <groupfilter function='member' level='[none:server_id:ok]' member='68' />
              <groupfilter function='member' level='[none:server_id:ok]' member='69' />
              <groupfilter function='member' level='[none:server_id:ok]' member='70' />
              <groupfilter function='member' level='[none:server_id:ok]' member='71' />
              <groupfilter function='member' level='[none:server_id:ok]' member='72' />
              <groupfilter function='member' level='[none:server_id:ok]' member='73' />
              <groupfilter function='member' level='[none:server_id:ok]' member='74' />
              <groupfilter function='member' level='[none:server_id:ok]' member='75' />
              <groupfilter function='member' level='[none:server_id:ok]' member='76' />
              <groupfilter function='member' level='[none:server_id:ok]' member='77' />
              <groupfilter function='member' level='[none:server_id:ok]' member='78' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wwwctr1urti431cndox8057nqzb].[cnt:ctwid (user_payment_record.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0wwwctr1urti431cndox8057nqzb].[cnt:ctwid:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wwwctr1urti431cndox8057nqzb].[cnt:ctwid (user_payment_record.csv):qk] + [federated.0wwwctr1urti431cndox8057nqzb].[cnt:ctwid:qk])</rows>
        <cols>[federated.0wwwctr1urti431cndox8057nqzb].[none:time:qk]</cols>
      </table>
      <simple-id uuid='{944C75E1-BF4E-4DA8-A716-0C625C72E3E6}' />
    </worksheet>
    <worksheet name='用户游玩时长'>
      <table>
        <view>
          <datasources>
            <datasource caption='createrole_login_record.csv+ (多个连接)' name='federated.0wwwctr1urti431cndox8057nqzb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwwctr1urti431cndox8057nqzb'>
            <column-instance column='[session_length]' derivation='Avg' name='[avg:session_length:qk]' pivot='key' type='quantitative' />
            <column caption='Dt (User Daily Session Length Record.Csv)' datatype='date' name='[dt (user_daily_session_length_record.csv)]' role='dimension' type='ordinal' />
            <column-instance column='[server_id (createrole_login_record.csv1)]' derivation='None' name='[none:server_id (createrole_login_record.csv1):ok]' pivot='key' type='ordinal' />
            <column caption='Server Id (Createrole Login Record.Csv1)' datatype='integer' name='[server_id (createrole_login_record.csv1)]' role='dimension' type='ordinal' />
            <column caption='Session Length' datatype='integer' name='[session_length]' role='measure' type='quantitative' />
            <column-instance column='[dt (user_daily_session_length_record.csv)]' derivation='Day-Trunc' name='[tdy:dt (user_daily_session_length_record.csv):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (createrole_login_record.csv1):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='1' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='2' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='3' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='4' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='5' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='6' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='7' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='8' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='9' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='10' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='11' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='12' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='13' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='14' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='15' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='16' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='17' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='18' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='19' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='20' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='21' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='22' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='23' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='24' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='25' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='26' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='27' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='28' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='29' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='30' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='31' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='32' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='33' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='34' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='35' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='36' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='37' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='38' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='39' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='40' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='41' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='42' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='43' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='44' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='45' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='46' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='47' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='48' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='49' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='50' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='51' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='52' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='53' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='54' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='55' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='56' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='57' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='58' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='59' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='60' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='61' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='62' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='63' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='64' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='65' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='66' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='67' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='68' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='69' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='70' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='71' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='72' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='73' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='74' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='75' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='76' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='77' />
              <groupfilter function='member' level='[none:server_id (createrole_login_record.csv1):ok]' member='78' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (createrole_login_record.csv1):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (createrole_login_record.csv1):ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wwwctr1urti431cndox8057nqzb].[avg:session_length:qk]</rows>
        <cols>[federated.0wwwctr1urti431cndox8057nqzb].[tdy:dt (user_daily_session_length_record.csv):qk]</cols>
      </table>
      <simple-id uuid='{AC3D7DA6-17F1-4E11-B398-9AFBCB71B7B5}' />
    </worksheet>
    <worksheet name='登录DAU次日留存率'>
      <table>
        <view>
          <datasources>
            <datasource caption='createrole_login_record.csv+ (多个连接)' name='federated.0wwwctr1urti431cndox8057nqzb' />
          </datasources>
          <datasource-dependencies datasource='federated.0wwwctr1urti431cndox8057nqzb'>
            <column caption='COUNTD([Ctwid (Createrole Login Record.Csv1)])/COUNTD([Ctwid])' datatype='real' name='[Calculation_2143431969435127819]' role='measure' type='quantitative' user:unnamed='工作表 2'>
              <calculation class='tableau' formula='COUNTD([ctwid (createrole_login_record.csv1)])/COUNTD([ctwid])' />
            </column>
            <column-instance column='[ctwid (createrole_login_record.csv1)]' derivation='CountD' name='[ctd:ctwid (createrole_login_record.csv1):qk]' pivot='key' type='quantitative' />
            <column caption='Ctwid (Createrole Login Record.Csv1)' datatype='string' name='[ctwid (createrole_login_record.csv1)]' role='dimension' type='nominal' />
            <column caption='Ctwid' datatype='string' name='[ctwid]' role='dimension' type='nominal' />
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[server_id]' derivation='None' name='[none:server_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Server Id' datatype='integer' name='[server_id]' role='dimension' type='ordinal' />
            <column-instance column='[dt]' derivation='Day-Trunc' name='[tdy:dt:qk]' pivot='key' type='quantitative' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2143431969435127819]' derivation='User' name='[usr:Calculation_2143431969435127819:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:server_id:ok]' member='1' />
              <groupfilter function='member' level='[none:server_id:ok]' member='2' />
              <groupfilter function='member' level='[none:server_id:ok]' member='3' />
              <groupfilter function='member' level='[none:server_id:ok]' member='4' />
              <groupfilter function='member' level='[none:server_id:ok]' member='5' />
              <groupfilter function='member' level='[none:server_id:ok]' member='6' />
              <groupfilter function='member' level='[none:server_id:ok]' member='7' />
              <groupfilter function='member' level='[none:server_id:ok]' member='8' />
              <groupfilter function='member' level='[none:server_id:ok]' member='9' />
              <groupfilter function='member' level='[none:server_id:ok]' member='10' />
              <groupfilter function='member' level='[none:server_id:ok]' member='11' />
              <groupfilter function='member' level='[none:server_id:ok]' member='12' />
              <groupfilter function='member' level='[none:server_id:ok]' member='13' />
              <groupfilter function='member' level='[none:server_id:ok]' member='14' />
              <groupfilter function='member' level='[none:server_id:ok]' member='15' />
              <groupfilter function='member' level='[none:server_id:ok]' member='16' />
              <groupfilter function='member' level='[none:server_id:ok]' member='17' />
              <groupfilter function='member' level='[none:server_id:ok]' member='18' />
              <groupfilter function='member' level='[none:server_id:ok]' member='19' />
              <groupfilter function='member' level='[none:server_id:ok]' member='20' />
              <groupfilter function='member' level='[none:server_id:ok]' member='21' />
              <groupfilter function='member' level='[none:server_id:ok]' member='22' />
              <groupfilter function='member' level='[none:server_id:ok]' member='23' />
              <groupfilter function='member' level='[none:server_id:ok]' member='24' />
              <groupfilter function='member' level='[none:server_id:ok]' member='25' />
              <groupfilter function='member' level='[none:server_id:ok]' member='26' />
              <groupfilter function='member' level='[none:server_id:ok]' member='27' />
              <groupfilter function='member' level='[none:server_id:ok]' member='28' />
              <groupfilter function='member' level='[none:server_id:ok]' member='29' />
              <groupfilter function='member' level='[none:server_id:ok]' member='30' />
              <groupfilter function='member' level='[none:server_id:ok]' member='31' />
              <groupfilter function='member' level='[none:server_id:ok]' member='32' />
              <groupfilter function='member' level='[none:server_id:ok]' member='33' />
              <groupfilter function='member' level='[none:server_id:ok]' member='34' />
              <groupfilter function='member' level='[none:server_id:ok]' member='35' />
              <groupfilter function='member' level='[none:server_id:ok]' member='36' />
              <groupfilter function='member' level='[none:server_id:ok]' member='37' />
              <groupfilter function='member' level='[none:server_id:ok]' member='38' />
              <groupfilter function='member' level='[none:server_id:ok]' member='39' />
              <groupfilter function='member' level='[none:server_id:ok]' member='40' />
              <groupfilter function='member' level='[none:server_id:ok]' member='41' />
              <groupfilter function='member' level='[none:server_id:ok]' member='42' />
              <groupfilter function='member' level='[none:server_id:ok]' member='43' />
              <groupfilter function='member' level='[none:server_id:ok]' member='44' />
              <groupfilter function='member' level='[none:server_id:ok]' member='45' />
              <groupfilter function='member' level='[none:server_id:ok]' member='46' />
              <groupfilter function='member' level='[none:server_id:ok]' member='47' />
              <groupfilter function='member' level='[none:server_id:ok]' member='48' />
              <groupfilter function='member' level='[none:server_id:ok]' member='49' />
              <groupfilter function='member' level='[none:server_id:ok]' member='50' />
              <groupfilter function='member' level='[none:server_id:ok]' member='51' />
              <groupfilter function='member' level='[none:server_id:ok]' member='52' />
              <groupfilter function='member' level='[none:server_id:ok]' member='53' />
              <groupfilter function='member' level='[none:server_id:ok]' member='54' />
              <groupfilter function='member' level='[none:server_id:ok]' member='55' />
              <groupfilter function='member' level='[none:server_id:ok]' member='56' />
              <groupfilter function='member' level='[none:server_id:ok]' member='57' />
              <groupfilter function='member' level='[none:server_id:ok]' member='58' />
              <groupfilter function='member' level='[none:server_id:ok]' member='59' />
              <groupfilter function='member' level='[none:server_id:ok]' member='60' />
              <groupfilter function='member' level='[none:server_id:ok]' member='61' />
              <groupfilter function='member' level='[none:server_id:ok]' member='62' />
              <groupfilter function='member' level='[none:server_id:ok]' member='63' />
              <groupfilter function='member' level='[none:server_id:ok]' member='64' />
              <groupfilter function='member' level='[none:server_id:ok]' member='65' />
              <groupfilter function='member' level='[none:server_id:ok]' member='66' />
              <groupfilter function='member' level='[none:server_id:ok]' member='67' />
              <groupfilter function='member' level='[none:server_id:ok]' member='68' />
              <groupfilter function='member' level='[none:server_id:ok]' member='69' />
              <groupfilter function='member' level='[none:server_id:ok]' member='70' />
              <groupfilter function='member' level='[none:server_id:ok]' member='71' />
              <groupfilter function='member' level='[none:server_id:ok]' member='72' />
              <groupfilter function='member' level='[none:server_id:ok]' member='73' />
              <groupfilter function='member' level='[none:server_id:ok]' member='74' />
              <groupfilter function='member' level='[none:server_id:ok]' member='75' />
              <groupfilter function='member' level='[none:server_id:ok]' member='76' />
              <groupfilter function='member' level='[none:server_id:ok]' member='77' />
              <groupfilter function='member' level='[none:server_id:ok]' member='78' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]'>
            <groupfilter function='member' level='[none:type:nk]' member='&quot;g_login&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</column>
            <column>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0wwwctr1urti431cndox8057nqzb].[usr:Calculation_2143431969435127819:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' />
              <size column='[federated.0wwwctr1urti431cndox8057nqzb].[usr:Calculation_2143431969435127819:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wwwctr1urti431cndox8057nqzb].[ctd:ctwid (createrole_login_record.csv1):qk]</rows>
        <cols>[federated.0wwwctr1urti431cndox8057nqzb].[tdy:dt:qk]</cols>
      </table>
      <simple-id uuid='{D1C40E69-93F3-4B81-BC9D-6399EC19CE7C}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='DAU'>
      <cards>
        <edge name='left'>
          <strip size='244'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]' type='filter' />
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D027B6C0-505D-4498-B14D-B1D633C48AAC}' />
    </window>
    <window class='worksheet' name='MAU'>
      <cards>
        <edge name='left'>
          <strip size='183'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59123C78-8FB2-41D0-BD74-F05FE70325C2}' />
    </window>
    <window class='worksheet' name='登录DAU次日留存率'>
      <cards>
        <edge name='left'>
          <strip size='140'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='filter' />
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0wwwctr1urti431cndox8057nqzb].[usr:Calculation_2143431969435127819:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969434992650:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid (createrole_login_record.csv1):nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA1B41C0-9EC8-4E53-9ABE-6A05D995C9C5}' />
    </window>
    <window class='worksheet' name='用户游玩时长'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (createrole_login_record.csv1):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (createrole_login_record.csv1):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (createrole_login_record.csv1):ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[yr:dt (user_daily_session_length_record.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49051294-EDF3-4287-8A03-D204CFAB57C4}' />
    </window>
    <window class='worksheet' name='PUR用户付费率'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]' type='filter' />
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969442488335:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid (user_payment_record.csv):nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5395544F-EC1F-4DF7-B73D-C8A250A5F60C}' />
    </window>
    <window class='worksheet' name='ARPU每用户平均收入'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid (user_payment_record.csv):nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A05D69BD-B645-420F-82B2-2A5F1B1B2309}' />
    </window>
    <window class='worksheet' name='ARPPU每付费玩家收入'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (user_payment_record.csv):ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (user_payment_record.csv):ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969447125010:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969447145491:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id (user_payment_record.csv):ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A32A434-E0AA-4465-9EE8-4E952C18EE2A}' />
    </window>
    <window class='worksheet' maximized='true' name='并发事件量'>
      <cards>
        <edge name='left'>
          <strip size='270'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:time:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0wwwctr1urti431cndox8057nqzb].[cnt:ctwid:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0wwwctr1urti431cndox8057nqzb].[cnt:ctwid:qk]</field>
                  <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</field>
                  <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:time:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>155</value>
                <value>4</value>
                <value>1729695606000</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969451917333:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969452245014:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969456914461:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969457324064:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969467633698:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969467973667:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969468764198:ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969468813351:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969468964904:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969469009961:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:Calculation_2143431969469747242:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid (user_payment_record.csv):nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:ctwid:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:server_id:ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:time:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[none:type:nk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[sc:time:ok]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[tsc:time:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[tyr:time:qk]</field>
            <field>[federated.0wwwctr1urti431cndox8057nqzb].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F56A415A-F1EC-45B6-A7D4-8829C38A5918}' />
    </window>
    <window class='worksheet' name='工作表 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{39F05E45-B02B-4175-8A0B-F088D237D58A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='ARPPU每付费玩家收入' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ARPU每用户平均收入' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DAU' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MAU' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='PUR用户付费率' width='192'>
      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
      qRe/EnYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='工作表 9' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='并发事件量' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='用户游玩时长' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='登录DAU次日留存率' width='192'>
      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
      9IvCg5zT/wfkIpdfAbvN9wAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
